/* tslint:disable */
/* eslint-disable */
/**
 * Road Manager - OpenAPI 3.0
 * Road Manager API
 *
 * The version of the OpenAPI document: 1.0.11
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type { RoadDTO, RoadNetworkDTO } from "../models";
import {
    RoadDTOFromJSON,
    RoadDTOToJSON,
    RoadNetworkDTOFromJSON,
    RoadNetworkDTOToJSON,
} from "../models";

export interface AddOrEditRoadRequest {
    roadDTO: RoadDTO;
}

/**
 *
 */
export class RoadNetworkApi extends runtime.BaseAPI {
    /**
     * Add or update road by id
     */
    async addOrEditRoadRaw(
        requestParameters: AddOrEditRoadRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction
    ): Promise<runtime.ApiResponse<void>> {
        if (
            requestParameters.roadDTO === null ||
            requestParameters.roadDTO === undefined
        ) {
            throw new runtime.RequiredError(
                "roadDTO",
                "Required parameter requestParameters.roadDTO was null or undefined when calling addOrEditRoad."
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters["Content-Type"] = "application/json";

        const response = await this.request(
            {
                path: `/roadNetwork`,
                method: "POST",
                headers: headerParameters,
                query: queryParameters,
                body: RoadDTOToJSON(requestParameters.roadDTO),
            },
            initOverrides
        );

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Add or update road by id
     */
    async addOrEditRoad(
        roadDTO: RoadDTO,
        initOverrides?: RequestInit | runtime.InitOverrideFunction
    ): Promise<void> {
        await this.addOrEditRoadRaw({ roadDTO: roadDTO }, initOverrides);
    }

    /**
     * Get all roads
     */
    async getRoadNetworkRaw(
        initOverrides?: RequestInit | runtime.InitOverrideFunction
    ): Promise<runtime.ApiResponse<RoadNetworkDTO>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request(
            {
                path: `/roadNetwork`,
                method: "GET",
                headers: headerParameters,
                query: queryParameters,
            },
            initOverrides
        );

        return new runtime.JSONApiResponse(response, (jsonValue) =>
            RoadNetworkDTOFromJSON(jsonValue)
        );
    }

    /**
     * Get all roads
     */
    async getRoadNetwork(
        initOverrides?: RequestInit | runtime.InitOverrideFunction
    ): Promise<RoadNetworkDTO> {
        const response = await this.getRoadNetworkRaw(initOverrides);
        return await response.value();
    }
}
