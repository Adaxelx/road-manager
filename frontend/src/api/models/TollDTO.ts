/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { VehicleTollDTO } from "./VehicleTollDTO";
import {
    VehicleTollDTOFromJSON,
    VehicleTollDTOFromJSONTyped,
    VehicleTollDTOToJSON,
} from "./VehicleTollDTO";

/**
 *
 * @export
 * @interface TollDTO
 */
export interface TollDTO {
    /**
     *
     * @type {number}
     * @memberof TollDTO
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof TollDTO
     */
    name?: string;
    /**
     *
     * @type {Array<VehicleTollDTO>}
     * @memberof TollDTO
     */
    vehicleTollDTOS?: Array<VehicleTollDTO>;
    /**
     *
     * @type {Array<number>}
     * @memberof TollDTO
     */
    roadSegments?: Array<number>;
}

/**
 * Check if a given object implements the TollDTO interface.
 */
export function instanceOfTollDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TollDTOFromJSON(json: any): TollDTO {
    return TollDTOFromJSONTyped(json, false);
}

export function TollDTOFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): TollDTO {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        id: !exists(json, "id") ? undefined : json["id"],
        name: !exists(json, "name") ? undefined : json["name"],
        vehicleTollDTOS: !exists(json, "vehicleTollDTOS")
            ? undefined
            : (json["vehicleTollDTOS"] as Array<any>).map(
                  VehicleTollDTOFromJSON
              ),
        roadSegments: !exists(json, "roadSegments")
            ? undefined
            : json["roadSegments"],
    };
}

export function TollDTOToJSON(value?: TollDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        id: value.id,
        name: value.name,
        vehicleTollDTOS:
            value.vehicleTollDTOS === undefined
                ? undefined
                : (value.vehicleTollDTOS as Array<any>).map(
                      VehicleTollDTOToJSON
                  ),
        roadSegments: value.roadSegments,
    };
}
