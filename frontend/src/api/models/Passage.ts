/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { Junction } from "./Junction";
import {
    JunctionFromJSON,
    JunctionFromJSONTyped,
    JunctionToJSON,
} from "./Junction";
import type { Payment } from "./Payment";
import {
    PaymentFromJSON,
    PaymentFromJSONTyped,
    PaymentToJSON,
} from "./Payment";

/**
 *
 * @export
 * @interface Passage
 */
export interface Passage {
    /**
     *
     * @type {number}
     * @memberof Passage
     */
    id?: number;
    /**
     *
     * @type {Date}
     * @memberof Passage
     */
    date?: Date;
    /**
     *
     * @type {Payment}
     * @memberof Passage
     */
    payment?: Payment;
    /**
     *
     * @type {Junction}
     * @memberof Passage
     */
    start?: Junction;
    /**
     *
     * @type {Junction}
     * @memberof Passage
     */
    end?: Junction;
}

/**
 * Check if a given object implements the Passage interface.
 */
export function instanceOfPassage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PassageFromJSON(json: any): Passage {
    return PassageFromJSONTyped(json, false);
}

export function PassageFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): Passage {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        id: !exists(json, "id") ? undefined : json["id"],
        date: !exists(json, "date") ? undefined : new Date(json["date"]),
        payment: !exists(json, "payment")
            ? undefined
            : PaymentFromJSON(json["payment"]),
        start: !exists(json, "start")
            ? undefined
            : JunctionFromJSON(json["start"]),
        end: !exists(json, "end") ? undefined : JunctionFromJSON(json["end"]),
    };
}

export function PassageToJSON(value?: Passage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        id: value.id,
        date: value.date === undefined ? undefined : value.date.toISOString(),
        payment: PaymentToJSON(value.payment),
        start: JunctionToJSON(value.start),
        end: JunctionToJSON(value.end),
    };
}
