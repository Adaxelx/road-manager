/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { Passage } from "./Passage";
import {
    PassageFromJSON,
    PassageFromJSONTyped,
    PassageToJSON,
} from "./Passage";

/**
 *
 * @export
 * @interface Payment
 */
export interface Payment {
    /**
     *
     * @type {number}
     * @memberof Payment
     */
    id?: number;
    /**
     *
     * @type {boolean}
     * @memberof Payment
     */
    paid?: boolean;
    /**
     *
     * @type {number}
     * @memberof Payment
     */
    price?: number;
    /**
     *
     * @type {Passage}
     * @memberof Payment
     */
    passage?: Passage;
}

/**
 * Check if a given object implements the Payment interface.
 */
export function instanceOfPayment(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PaymentFromJSON(json: any): Payment {
    return PaymentFromJSONTyped(json, false);
}

export function PaymentFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): Payment {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        id: !exists(json, "id") ? undefined : json["id"],
        paid: !exists(json, "paid") ? undefined : json["paid"],
        price: !exists(json, "price") ? undefined : json["price"],
        passage: !exists(json, "passage")
            ? undefined
            : PassageFromJSON(json["passage"]),
    };
}

export function PaymentToJSON(value?: Payment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        id: value.id,
        paid: value.paid,
        price: value.price,
        passage: PassageToJSON(value.passage),
    };
}
