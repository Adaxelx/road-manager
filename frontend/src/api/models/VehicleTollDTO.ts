/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface VehicleTollDTO
 */
export interface VehicleTollDTO {
    /**
     *
     * @type {number}
     * @memberof VehicleTollDTO
     */
    id?: number;
    /**
     *
     * @type {number}
     * @memberof VehicleTollDTO
     */
    pricePerKilometer?: number;
    /**
     *
     * @type {string}
     * @memberof VehicleTollDTO
     */
    vehicleType?: VehicleTollDTOVehicleTypeEnum;
}

/**
 * @export
 * @enum {string}
 */
export enum VehicleTollDTOVehicleTypeEnum {
    Car = "CAR",
    Truck = "TRUCK",
}

/**
 * Check if a given object implements the VehicleTollDTO interface.
 */
export function instanceOfVehicleTollDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VehicleTollDTOFromJSON(json: any): VehicleTollDTO {
    return VehicleTollDTOFromJSONTyped(json, false);
}

export function VehicleTollDTOFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): VehicleTollDTO {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        id: !exists(json, "id") ? undefined : json["id"],
        pricePerKilometer: !exists(json, "pricePerKilometer")
            ? undefined
            : json["pricePerKilometer"],
        vehicleType: !exists(json, "vehicleType")
            ? undefined
            : json["vehicleType"],
    };
}

export function VehicleTollDTOToJSON(value?: VehicleTollDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        id: value.id,
        pricePerKilometer: value.pricePerKilometer,
        vehicleType: value.vehicleType,
    };
}
