/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { SubscriptionDTO } from "./SubscriptionDTO";
import {
    SubscriptionDTOFromJSON,
    SubscriptionDTOFromJSONTyped,
    SubscriptionDTOToJSON,
} from "./SubscriptionDTO";
import type { VehicleDTO } from "./VehicleDTO";
import {
    VehicleDTOFromJSON,
    VehicleDTOFromJSONTyped,
    VehicleDTOToJSON,
} from "./VehicleDTO";

/**
 *
 * @export
 * @interface AppUser
 */
export interface AppUser {
    /**
     *
     * @type {number}
     * @memberof AppUser
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof AppUser
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof AppUser
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof AppUser
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof AppUser
     */
    phoneNumber?: string;
    /**
     *
     * @type {Array<VehicleDTO>}
     * @memberof AppUser
     */
    vehicles?: Array<VehicleDTO>;
    /**
     *
     * @type {Array<SubscriptionDTO>}
     * @memberof AppUser
     */
    subscriptions?: Array<SubscriptionDTO>;
}

/**
 * Check if a given object implements the AppUser interface.
 */
export function instanceOfAppUser(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AppUserFromJSON(json: any): AppUser {
    return AppUserFromJSONTyped(json, false);
}

export function AppUserFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): AppUser {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        id: !exists(json, "id") ? undefined : json["id"],
        email: !exists(json, "email") ? undefined : json["email"],
        firstName: !exists(json, "firstName") ? undefined : json["firstName"],
        lastName: !exists(json, "lastName") ? undefined : json["lastName"],
        phoneNumber: !exists(json, "phoneNumber")
            ? undefined
            : json["phoneNumber"],
        vehicles: !exists(json, "vehicles")
            ? undefined
            : (json["vehicles"] as Array<any>).map(VehicleDTOFromJSON),
        subscriptions: !exists(json, "subscriptions")
            ? undefined
            : (json["subscriptions"] as Array<any>).map(
                  SubscriptionDTOFromJSON
              ),
    };
}

export function AppUserToJSON(value?: AppUser | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        id: value.id,
        email: value.email,
        firstName: value.firstName,
        lastName: value.lastName,
        phoneNumber: value.phoneNumber,
        vehicles:
            value.vehicles === undefined
                ? undefined
                : (value.vehicles as Array<any>).map(VehicleDTOToJSON),
        subscriptions:
            value.subscriptions === undefined
                ? undefined
                : (value.subscriptions as Array<any>).map(
                      SubscriptionDTOToJSON
                  ),
    };
}
