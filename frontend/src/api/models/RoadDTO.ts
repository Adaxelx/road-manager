/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { RoadSegmentDTO } from "./RoadSegmentDTO";
import {
    RoadSegmentDTOFromJSON,
    RoadSegmentDTOFromJSONTyped,
    RoadSegmentDTOToJSON,
} from "./RoadSegmentDTO";

/**
 *
 * @export
 * @interface RoadDTO
 */
export interface RoadDTO {
    /**
     *
     * @type {number}
     * @memberof RoadDTO
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof RoadDTO
     */
    code?: string;
    /**
     *
     * @type {string}
     * @memberof RoadDTO
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof RoadDTO
     */
    type?: RoadDTOTypeEnum;
    /**
     *
     * @type {Array<RoadSegmentDTO>}
     * @memberof RoadDTO
     */
    segments?: Array<RoadSegmentDTO>;
}

/**
 * @export
 * @enum {string}
 */
export enum RoadDTOTypeEnum {
    Highway = "HIGHWAY",
    NationalRoad = "NATIONAL_ROAD",
    VoivodeshipRoad = "VOIVODESHIP_ROAD",
}

/**
 * Check if a given object implements the RoadDTO interface.
 */
export function instanceOfRoadDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RoadDTOFromJSON(json: any): RoadDTO {
    return RoadDTOFromJSONTyped(json, false);
}

export function RoadDTOFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): RoadDTO {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        id: !exists(json, "id") ? undefined : json["id"],
        code: !exists(json, "code") ? undefined : json["code"],
        name: !exists(json, "name") ? undefined : json["name"],
        type: !exists(json, "type") ? undefined : json["type"],
        segments: !exists(json, "segments")
            ? undefined
            : (json["segments"] as Array<any>).map(RoadSegmentDTOFromJSON),
    };
}

export function RoadDTOToJSON(value?: RoadDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        id: value.id,
        code: value.code,
        name: value.name,
        type: value.type,
        segments:
            value.segments === undefined
                ? undefined
                : (value.segments as Array<any>).map(RoadSegmentDTOToJSON),
    };
}
